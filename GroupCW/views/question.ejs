<!doctype html>
<html lang="en">

<%- include('header'); -%>

<body>
    <div id="question">
        <%- include('navbar'); -%>
<section class="question-page">
    <section class="question-main card rounded shadowed">
        <div class="question-main-header">
            <h2 class="underlined">Question</h2>
            <div class="tags" v-if="question">
                <span class="chip chip-regularity-standard" v-if="question.regularity === 0"></span>
                <span class="chip chip-regularity-infrequent" v-else-if="question.regularity === 1"></span>
                <span class="chip chip-regularity-unusual" v-else-if="question.regularity === 2"></span>
                
                <span class="chip chip-difficulty-beginner" v-if="question.difficulty === 0"></span>
                <span class="chip chip-difficulty-intermediate" v-else-if="question.difficulty === 1"></span>
                <span class="chip chip-difficulty-advanced" v-else-if="question.difficulty === 2"></span>

            </div>
        </div>
        <h2 class="question-text" v-if="question">{{ question.question }}</h2>
        <div class="recording">
            <button v-if="!isRecording" class="material-symbols-rounded icon-button red-button" @click="startRecording()">mic</button>
            <button v-else class="material-symbols-rounded icon-button red-button" @click="stopRecording()">stop_circle</button>
        </div>

    </section>

    <!-- <div class="playback_controls">
        <button class="material-symbols-rounded icon-button minimal-button">replay_10</button>
        <button class="material-symbols-rounded icon-button minimal-button">play_arrow</button>
        <button class="material-symbols-rounded icon-button minimal-button">forward_10</button>
    </div> -->
    <section class="question-advice card rounded shadowed">
        <h2 class="underlined">Advice</h2>
        <ul>
            <li>Start with a Strong Opening: Begin with a concise and compelling introduction that grabs the
                interviewer's attention.</li>

            <li>Provide a Brief Professional Overview: Share key aspects of your professional background, such
                as your education, relevant experience, and current role.</li>

            <li>Highlight Key Achievements: Mention notable accomplishments and projects to showcase your skills
                and contributions.</li>

            <li>Connect to the Job: Tailor your response by emphasizing experiences and skills that align with
                the requirements of the position.</li>

            <li>Showcase Soft Skills: Discuss interpersonal skills, teamwork, and adaptability to demonstrate
                your overall fit for the company culture.</li>

            <li>Express Passion and Motivation: Share your enthusiasm for the industry and the specific role,
                conveying genuine interest in the opportunity.</li>

            <li>Keep it Concise: Aim for a response that lasts around 2-3 minutes, focusing on the most relevant
                and impactful information.</li>
        </ul>
    </section>
    <section class="your-responses card rounded shadowed">
        <div class="respones-header">
            <h2 class="underlined">My Responses</h2>
            <div>
                <div class="tooltip" tooltip-text="Filter by Industry">
                    <select name="industry">
                        <option>All Industries</option>
                        <!-- for-each options on all industry options from api  -->
                    </select>
                </div>
                <div class="tooltip" tooltip-text="Sort By">
                    <select name="industry">
                        <option>Rating</option>
                        <option>Date</option>
                    </select>
                </div>
            </div>
        </div>

        <div v-if="userResponses.length === 0">
           <i>You have no responses</i> 
        </div>

        <div class="response card rounded shadowed" v-for="(response, i) in userResponses">
            <div class="response-meta">
                <p class="username"><span class="material-symbols-rounded">person</span>
                    {{ response.username }}</p>
                <span class="timestamp">{{ formatDate(response.timestamp) }}</span>
            </div>

            <div class="response-options">
                <span class="avg-rating flex-center">{{ averageRatings[response.id].toFixed(1) }}<span
                        class="material-symbols-rounded star-filled">star_rate</span></span>
                <input type="checkbox" v-bind:id="'visibility-toggle-user-' + i" class="toggle hidden"
                    v-model="response.private" :true-value="false" :false-value="true" v-on:change="updatePrivacy(response.questionId, response.id, response.private)">
                <label class="toggle-label" v-bind:for="'visibility-toggle-user-' + i" title="Public visibility toggle">
                    <span class="material-symbols-rounded toggle-on">visibility</span>
                    <span class="material-symbols-rounded toggle-off">visibility_off</span>
                </label>
                <input type="checkbox" v-bind:id="'transcript-toggle-user-' + i" class="toggle hidden" v-model="response.showTranscript">
                <label class="toggle-label" v-bind:for="'transcript-toggle-user-' + i" title="Toggle transcript">
                    <span class="material-symbols-rounded toggle-on">description</span>
                    <span class="material-symbols-rounded toggle-off strikethrough">description</span>
                </label>
                <input type="checkbox" v-bind:id="'comments-toggle-user-' + i" class="toggle hidden" v-model="response.showComments">
                <label class="toggle-label" v-bind:for="'comments-toggle-user-' + i" title="Toggle comments">
                    <span class="material-symbols-rounded toggle-on">comment</span>
                    <span class="material-symbols-rounded toggle-off">comments_disabled</span>
                </label>
                <button @click="deleteResponse(response.questionId, response.id)"
                    class="material-symbols-rounded icon-button minimal-button minimal-red-button">delete</button>
            </div>

            <div class="response-timeline">
                <hr>
            </div>
            <div class="response-controls">
                <button class="material-symbols-rounded icon-button minimal-button" @click="seekAudio(response.id, -10)">replay_10</button>
                <button class="material-symbols-rounded icon-button minimal-button"
                    v-if="!response.audio || response.audioPaused" @click="playAudio(response)">play_arrow</button>
                <button class="material-symbols-rounded icon-button minimal-button" v-else @click="pauseAudio(response)">pause</button>
                <button class="material-symbols-rounded icon-button minimal-button" @click="seekAudio(response.id, 10)">forward_10</button>
            </div>
            <div class="response-transcript" v-if="response.showTranscript">
                <h3 class="underlined">Transcript</h3>
                <p>{{ response.transcript.find(x => x.to === "en").text }}</p>
            </div>
            <div class="response-comments" v-if="response.showComments">
                <h3 class="underlined">Comments</h3>
                <div class="comment rounded" v-for="comment in response.comments">
                    <div class="response-meta">
                        <p class="comment-username"><span
                                class="material-symbols-rounded">person</span>{{ comment.username }}
                        </p>
                        <span class="timestamp">{{formatDate(comment.timestamp)}}</span>
                    </div>
                    
                    <p class="comment-text">{{ comment.comment }}</p>
                    <div class="like-count rounded" v-if="comment.username !== user">
                        <button class="icon-button material-symbols-rounded minimal-button" @click="rateComment(response.id, comment.id, 'like')"
                            :class="[comment.thumbs_up.includes(user) ? 'liked' : '']">thumb_up</button>
                        <span>{{ comment.thumbs_up.length }}</span>
                    </div>
                    <div class="dislike-count rounded" v-if="comment.username !== user">
                        <button class="icon-button material-symbols-rounded minimal-button minimal-red-button" @click="rateComment(response.id, comment.id, 'dislike')"
                            :class="[comment.thumbs_down.includes(user) ? 'disliked' : '']">thumb_down</button>
                        <span>{{ comment.thumbs_down.length }}</span>
                    </div>
                </div>
                <div class="new-comment">
                    <textarea class="input" placeholder="Add a comment..." v-model="response.pending_comment"></textarea>
                    <button class="material-symbols-rounded icon-button" @click="submitComment(response.questionId, response.id, response.pending_comment)">chevron_right</button>
                </div>
            </div>
        </div>
    </section>
    <section class="community-responses card rounded shadowed">
        <div class="respones-header">
            <h2 class="underlined">Community Responses</h2>
            <div>
                <div class="tooltip" tooltip-text="Filter by Industry">
                    <select name="industry">
                        <option>All Industries</option>
                        <!-- for-each options on all industry options from api  -->
                    </select>
                </div>
                <div class="tooltip" tooltip-text="Sort By">
                    <select name="industry">
                        <option>Rating</option>
                        <option>Date</option>
                    </select>
                </div>
            </div>
        </div>

        <div v-if="communityResponses.length === 0">
            <i>There are no community responses</i> 
         </div>

        <div class="response card rounded shadowed" v-for="(response, i) in communityResponses">
            <div class="response-meta">
                <p class="username"><span class="material-symbols-rounded">person</span>
                    {{ response.username }}</p>
                <span class="timestamp">{{ formatDate(response.timestamp) }}</span>
            </div>

            <div class="response-options">
                <span class="avg-rating flex-center">{{ averageRatings[response.id].toFixed(1) }}<span
                        class="material-symbols-rounded star-filled">star_rate</span></span>
                <input type="checkbox" v-bind:id="'transcript-toggle-community-' + i" class="toggle hidden" v-model="response.showTranscript">
                <label class="toggle-label" v-bind:for="'transcript-toggle-community-' + i">
                    <span class="material-symbols-rounded toggle-on">description</span>
                    <span class="material-symbols-rounded toggle-off strikethrough">description</span>
                </label>
                <input type="checkbox" v-bind:id="'comments-toggle-community-' + i" class="toggle hidden" v-model="response.showComments">
                <label class="toggle-label" v-bind:for="'comments-toggle-community-' + i">
                    <span class="material-symbols-rounded toggle-on">comment</span>
                    <span class="material-symbols-rounded toggle-off">comments_disabled</span>
                </label>
            </div>

            <div class="response-timeline">
                <hr>
            </div>
            <div class="response-controls">
                <button class="material-symbols-rounded icon-button minimal-button" @click="seekAudio(response.id, -10)">replay_10</button>
                <button class="material-symbols-rounded icon-button minimal-button"
                    v-if="!response.audio || response.audioPaused" @click="playAudio(response)">play_arrow</button>
                <button class="material-symbols-rounded icon-button minimal-button" v-else @click="pauseAudio(response)">pause</button>
                <button class="material-symbols-rounded icon-button minimal-button" @click="seekAudio(response.id, 10)">forward_10</button>
            </div>
            <div class="response-rating">
                <!-- STAR RATINGS ARE REVERSED i.e. if the user clicks the first star, its a 5 star rating -->
                <span class="material-symbols-rounded star" @click="rateInterview(response.id, 5)"
                    :class="[userRatings[response.id] >= 5 ? 'star-filled' : '']">star_rate</span>
                <span class="material-symbols-rounded star" @click="rateInterview(response.id, 4)"
                    :class="[userRatings[response.id] >= 4 ? 'star-filled' : '']">star_rate</span>
                <span class="material-symbols-rounded star" @click="rateInterview(response.id, 3)"
                    :class="[userRatings[response.id] >= 3 ? 'star-filled' : '']">star_rate</span>
                <span class="material-symbols-rounded star" @click="rateInterview(response.id, 2)"
                    :class="[userRatings[response.id] >= 2 ? 'star-filled' : '']">star_rate</span>
                <span class="material-symbols-rounded star" @click="rateInterview(response.id, 1)"
                    :class="[userRatings[response.id] >= 1 ? 'star-filled' : '']">star_rate</span>
            </div>
            <div class="response-transcript" v-if="response.showTranscript">
                <h3 class="underlined">Transcript</h3>
                <p>{{ response.transcript.find(x => x.to === "en").text }}</p>
            </div>
            <div class="response-comments" v-if="response.showComments">
                <h3 class="underlined">Comments</h3>
                <div class="comment rounded" v-for="comment in response.comments">
                    <div class="response-meta">
                        <p class="comment-username"><span
                                class="material-symbols-rounded">person</span>{{ comment.username }}
                        </p>
                        <span class="timestamp">{{formatDate(comment.timestamp)}}</span>
                    </div>
                    <p class="comment-text">{{ comment.comment }}</p>
                    <div class="like-count rounded" v-if="comment.username !== user">
                        <button class="icon-button material-symbols-rounded minimal-button" @click="rateComment(response.id, comment.id, 'like')"
                            :class="[comment.thumbs_up.includes(user) ? 'liked' : '']">thumb_up</button>
                        <span>{{ comment.thumbs_up.length }}</span>
                    </div>
                    <div class="dislike-count rounded" v-if="comment.username !== user">
                        <button class="icon-button material-symbols-rounded minimal-button minimal-red-button" @click="rateComment(response.id, comment.id, 'dislike')"
                            :class="[comment.thumbs_down.includes(user) ? 'disliked' : '']">thumb_down</button>
                        <span>{{ comment.thumbs_down.length }}</span>
                    </div>
                </div>
                <div class="new-comment">
                    <textarea class="input" placeholder="Add a comment..." v-model="response.pending_comment"></textarea>
                    <button class="material-symbols-rounded icon-button" @click="submitComment(response.questionId, response.id, response.pending_comment)">chevron_right</button>
                </div>
            </div>
        </div>
    </section>
</section>

</main>
</div>

<script>const QUESTION_ID = '<%= id %>';</script>


<%- include('footer'); -%>

<!-- Application Javascript -->
<script defer src="/static/question.js"></script>
<script type="module" src="/static/audio.js"></script>


</body>
</html>